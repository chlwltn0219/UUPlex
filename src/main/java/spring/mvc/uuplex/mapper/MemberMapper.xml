<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="spring.mvc.uuplex.admin.dao.AdminDAO"> 

	<!-- 아이디 중복확인 -->
	<select id="idCheck" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM uu_member WHERE memId = #{memId}
	</select>

	<!-- 회원가입 -->
	<insert id="insert" parameterType="spring.mvc.uuplex.admin.dto.MemberDTO">
		INSERT INTO uu_member(idCode, memId, passwd, name, jumin1, jumin2, age, gender, address, phone, email, reg_date, grade)
		VALUES('105', #{memId}, #{passwd}, #{name}, #{jumin1}, #{jumin2}, #{age}, #{gender}, #{address}, #{phone}, #{email}, #{reg_date}, '일반회원')
	</insert>
	
	<!-- 로그인 -->
	<select id="pwdCheck" parameterType="Map" resultType="int">
		SELECT COUNT(*) FROM uu_member WHERE memId = #{memId} AND passwd = #{passwd}
	</select>
	
	<!-- 코드값 가져오기 -->
	<select id="idCode" parameterType="String" resultType="int">
		SELECT idCode FROM uu_member WHERE memId = #{memId}
	</select>
	
	<!-- 회원 리스트 가져오기 -->
	<select id="memberList" resultType="spring.mvc.uuplex.admin.dto.MemberDTO">
		SELECT * FROM uu_member WHERE idCode = '105' ORDER BY grade
	</select>
	
	<!-- 등급별 회원 리스트 가져오기 -->
	<select id="memberListSub" resultType="spring.mvc.uuplex.admin.dto.MemberDTO">
		SELECT * FROM uu_member WHERE idCode = '105' and grade = #{grade} ORDER BY reg_date
	</select>
	
	<!-- 회원 정보(1명) 가져오기 -->
	<select id="memberView" parameterType="String" resultType="spring.mvc.uuplex.admin.dto.MemberDTO">
		SELECT * FROM uu_member WHERE memId = #{memId}
	</select>
	
	<!-- 등업 시키기 -->
	<update id="upgrade" parameterType="Map">
		UPDATE uu_member SET grade = #{grade} WHERE memId = #{memId}
	</update>
	
	<!-- 회원정보 수정 -->
	<update id="memUpdate" parameterType="spring.mvc.uuplex.admin.dto.MemberDTO">
		UPDATE uu_member SET passwd = #{passwd}, name = #{name}, address = #{address}, phone = #{phone}, email = #{email} WHERE memId = #{memId}
	</update>
	
	<!-- 회원탈퇴 비밀번호 체크 -->
	<select id="deletepwdCheck" parameterType="Map" resultType="int">
		SELECT COUNT(*) FROM uu_member WHERE memId = #{memId} AND passwd = #{passwd}
	</select>
	
	<delete id="deleteMember" parameterType="String">
		DELETE FROM uu_member WHERE memId = #{memId}
	</delete>
	
</mapper>   